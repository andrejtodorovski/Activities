name: Build and Push Docker images
on:
  push:
    branches:
      - main
jobs:
  build-backend:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: at
          POSTGRES_DB: activities
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up JDK 17
      uses: actions/setup-java@v1
      with:
        java-version: 17

    - name: Build Spring Boot Application
      run: |
        cd backend
        chmod +x ./mvnw
        ./mvnw clean package -DskipTests

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push backend Docker image
      uses: docker/build-push-action@v2
      with:
        context: ./backend
        push: true
        tags: andrejtodorovski5/activities:latest

  build-frontend:
    needs: build-backend
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push frontend Docker image
      uses: docker/build-push-action@v2
      with:
        context: ./frontend
        push: true
        tags: andrejtodorovski5/activities-frontend:latest 

  deploy:
    needs: [build-backend, build-frontend]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Setup Kubernetes CLI
      uses: azure/setup-kubectl@v1
      with:
        version: 'latest'
    
    - name: Configure kubeconfig from secret
      env:
        KUBECONFIG_FILE: ${{ secrets.KUBECONFIG }}
      run: |
        echo "$KUBECONFIG_FILE" > ./kubeconfig
        export KUBECONFIG=./kubeconfig
    
    - name: Configure Kubernetes context
      run: |
        kubectl config use-context k3d-kiii

    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f ./k8s/namespace.yaml
        kubectl apply -f ./k8s/configmap.yaml
        kubectl apply -f ./k8s/secrets.yaml
        kubectl apply -f ./k8s/deployment-backend.yaml
        kubectl apply -f ./k8s/deployment-frontend.yaml
        kubectl apply -f ./k8s/service-backend.yaml
        kubectl apply -f ./k8s/service-frontend.yaml
        kubectl apply -f ./k8s/service-db.yaml
        kubectl apply -f ./k8s/ingress.yaml
        kubectl apply -f ./k8s/statefulset.yaml
        kubectl rollout restart deployment front -n activities
        kubectl rollout restart deployment backend -n activities
